version: "2.2"
services:
  backend:
    build:
      context: .
      dockerfile: Dockerfile.backend.dev
    ports:
      - "4000:4000"
    volumes:
      - ./:/renovo
    environment:
      - DATABASE_URL=postgres://postgres:postgres@pgdb/postgres
    env_file:
      - .env
    restart: always
    group_add:
      - $GID
    user: $UID:$GID
    ulimits:
      nproc: 65535
      nofile:
        soft: 20000
        hard: 40000
  importer:
    build:
      context: .
      dockerfile: Dockerfile.backend.dev
    volumes:
      - ./:/renovo
    command: scripts/dev_importer.sh
    environment:
      - DATABASE_URL=postgres://postgres:postgres@pgdb/postgres
    env_file:
      - .env
    restart: always
    group_add:
      - $GID
    user: $UID:$GID
    ulimits:
      nproc: 65535
      nofile:
        soft: 20000
        hard: 40000
  mailer:
    build:
      context: .
      dockerfile: Dockerfile.backend.dev
    volumes:
      - ./:/renovo
    command: scripts/dev_mailer.sh
    environment:
      - DATABASE_URL=postgres://postgres:postgres@pgdb/postgres
    env_file:
      - .env
    restart: always
    group_add:
      - $GID
    user: $UID:$GID
    ulimits:
      nproc: 65535
      nofile:
        soft: 20000
        hard: 40000
  frontend:
    build:
      context: .
      dockerfile: Dockerfile.frontend.dev
    ports:
      - "3490:3000"
    volumes:
      - ./:/renovo
    environment:
      - BACKEND_URL=http://backend:4000/api/graphql
      - NEXT_PUBLIC_BACKEND_URL=http://localhost:4000/api/graphql
    restart: always
    group_add:
      - $GID
    user: $UID:$GID
    ulimits:
      nproc: 65535
      nofile:
        soft: 20000
        hard: 40000
  pgdb:
    image: postgres:14
    restart: always
    environment:
      POSTGRES_PASSWORD: postgres
    volumes:
      - ./.data/pgdb:/var/lib/postgresql/data
